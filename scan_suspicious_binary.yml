---
- name: Localized Yara Scan 
 
  hosts: "{{ target_host_ip | default('localhost') }}"
  become: yes
  gather_facts: yes

  vars:
    yara_rules_dir_on_target: "/home/peter/Desktop/rules"
    yara_rule_file_name: "suspicious_binary_indicators.yar"

    yara_executable_on_target: "yara"
    yara_rule_full_path: "{{ yara_rules_dir_on_target }}/{{ yara_rule_file_name }}"

  pre_tasks:
    - name: Validate mandatory input variables
      ansible.builtin.assert:
        that:
          - file_to_scan is defined
          - file_to_scan | length > 0
          - target_host_ip is defined
        fail_msg: "Mandatory variable 'file_to_scan' must be provided via AWX extra_vars."
        quiet: yes

  tasks:
    - name: "Ensure Yara is present on target '{{ inventory_hostname }}'"
      ansible.builtin.package:
        name: "{{ yara_executable_on_target }}"
        state: present
      register: pkg_result
      failed_when: pkg_result is failed and "No package matching" not in pkg_result.msg | default('') and "Nothing to do" not in pkg_result.msg | default('')

    - name: "Verify Yara executable exists on target"
      ansible.builtin.command: "which {{ yara_executable_on_target }}"
      register: yara_which_check
      changed_when: false
      failed_when: false
      check_mode: no

    - name: "Verify Yara rule file exists on target"
      ansible.builtin.stat:
        path: "{{ yara_rule_full_path }}"
      register: rule_file_stat
      when: yara_which_check.rc == 0

    - name: "Check if target file '{{ file_to_scan }}' exists"
      ansible.builtin.stat:
        path: "{{ file_to_scan }}"
      register: file_stat
      when: yara_which_check.rc == 0
    
    - name: "Execute Yara scan"
      ansible.builtin.command:
        cmd: "{{ yara_executable_on_target }} {{ yara_rule_full_path }} {{ file_to_scan }}"
      register: yara_result
      failed_when: yara_result.rc > 1
      changed_when: false
      when:
        - yara_which_check.rc == 0
        - rule_file_stat.stat is defined and rule_file_stat.stat.exists and rule_file_stat.stat.isreg
        - file_stat.stat is defined and file_stat.stat.exists and file_stat.stat.isreg
   
    - name: "Display Yara Scan Results"
      ansible.builtin.debug:
        msg:
          - "YARA Scan Result on {{ inventory_hostname }} for file: {{ file_to_scan }}"
          - "Triggered by: Centralized Behaviour Monitoring (via AWX)"
          - "Using Rule File From Target Path: {{ yara_rule_full_path }}" 
          - "Scan Command: {{ yara_result.cmd | default('N/A') }}"
          - "Return Code: {{ yara_result.rc }}"
          - "Matches/Output (stdout): {{ yara_result.stdout | default('(No Matches Found)') }}"
          - "Errors (stderr): {{ yara_result.stderr | default('(No Errors)') }}"
      when: yara_result is defined

    - name: "Note if target file was not found/scannable"
      ansible.builtin.debug:
        msg: "YARA Scan Skipped on {{ inventory_hostname }}: Target file '{{ file_to_scan }}' not found, not a regular file, or prerequisite step failed."
      when: yara_which_check.rc == 0 and (yara_result is not defined or yara_result is skipped or (not file_stat.stat.exists or not file_stat.stat.isreg))

  post_tasks: []
